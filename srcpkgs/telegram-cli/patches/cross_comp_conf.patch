--- configure	2020-01-06 11:43:44.000000000 +0100
+++ configure.new	2020-02-01 11:42:54.891996110 +0100
@@ -640,6 +640,7 @@
 LUA_SHORT_VERSION
 LUA_VERSION
 LUA
+SED
 OPENSSL_LDFLAGS
 OPENSSL_LIBS
 OPENSSL_INCLUDES
@@ -2196,7 +2197,7 @@
 
 
 # ===========================================================================
-#          http://www.gnu.org/software/autoconf-archive/ax_lua.html
+#          https://www.gnu.org/software/autoconf-archive/ax_lua.html
 # ===========================================================================
 #
 # SYNOPSIS
@@ -2215,8 +2216,8 @@
 #   Also detect Lua headers and libraries. The Lua version contained in the
 #   header is checked to match the Lua interpreter version exactly. When
 #   searching for Lua libraries, the version number is used as a suffix.
-#   This is done with the goal of supporting multiple Lua installs (5.1 and
-#   5.2 side-by-side).
+#   This is done with the goal of supporting multiple Lua installs (5.1,
+#   5.2, and 5.3 side-by-side).
 #
 #   A note on compatibility with previous versions: This file has been
 #   mostly rewritten for serial 18. Most developers should be able to use
@@ -2248,13 +2249,10 @@
 #
 #   If MINIMUM-VERSION is supplied, then only Lua interpreters with a
 #   version number greater or equal to MINIMUM-VERSION will be accepted. If
-#   TOO-BIG- VERSION is also supplied, then only Lua interpreters with a
+#   TOO-BIG-VERSION is also supplied, then only Lua interpreters with a
 #   version number greater or equal to MINIMUM-VERSION and less than
 #   TOO-BIG-VERSION will be accepted.
 #
-#   Version comparisons require the AX_COMPARE_VERSION macro, which is
-#   provided by ax_compare_version.m4 from the Autoconf Archive.
-#
 #   The Lua version number, LUA_VERSION, is found from the interpreter, and
 #   substituted. LUA_PLATFORM is also found, but not currently supported (no
 #   standard representation).
@@ -2266,12 +2264,13 @@
 #     luaexecdir         Directory to install Lua modules.
 #     pkgluaexecdir      $luaexecdir/$PACKAGE
 #
-#   These paths a found based on $prefix, $exec_prefix, Lua's package.path,
-#   and package.cpath. The first path of package.path beginning with $prefix
-#   is selected as luadir. The first path of package.cpath beginning with
-#   $exec_prefix is used as luaexecdir. This should work on all reasonable
-#   Lua installations. If a path cannot be determined, a default path is
-#   used. Of course, the user can override these later when invoking make.
+#   These paths are found based on $prefix, $exec_prefix, Lua's
+#   package.path, and package.cpath. The first path of package.path
+#   beginning with $prefix is selected as luadir. The first path of
+#   package.cpath beginning with $exec_prefix is used as luaexecdir. This
+#   should work on all reasonable Lua installations. If a path cannot be
+#   determined, a default path is used. Of course, the user can override
+#   these later when invoking make.
 #
 #     luadir             Default: $prefix/share/lua/$LUA_VERSION
 #     luaexecdir         Default: $exec_prefix/lib/lua/$LUA_VERSION
@@ -2351,8 +2350,8 @@
 #
 # LICENSE
 #
-#   Copyright (c) 2013 Tim Perkins <tprk77@gmail.com>
-#   Copyright (c) 2013 Reuben Thomas <rrt@sc3d.org>
+#   Copyright (c) 2015 Reuben Thomas <rrt@sc3d.org>
+#   Copyright (c) 2014 Tim Perkins <tprk77@gmail.com>
 #
 #   This program is free software: you can redistribute it and/or modify it
 #   under the terms of the GNU General Public License as published by the
@@ -2365,7 +2364,7 @@
 #   Public License for more details.
 #
 #   You should have received a copy of the GNU General Public License along
-#   with this program. If not, see <http://www.gnu.org/licenses/>.
+#   with this program. If not, see <https://www.gnu.org/licenses/>.
 #
 #   As a special exception, the respective Autoconf Macro's copyright owner
 #   gives unlimited permission to copy, distribute and modify the configure
@@ -2380,7 +2379,7 @@
 #   modified version of the Autoconf Macro, you may extend this special
 #   exception to the GPL to apply to your modified version as well.
 
-#serial 21
+#serial 40
 
 
 
@@ -4758,6 +4757,75 @@
 
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for liblua" >&5
 $as_echo_n "checking for liblua... " >&6; }
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for a sed that does not truncate output" >&5
+$as_echo_n "checking for a sed that does not truncate output... " >&6; }
+if ${ac_cv_path_SED+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+            ac_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/
+     for ac_i in 1 2 3 4 5 6 7; do
+       ac_script="$ac_script$as_nl$ac_script"
+     done
+     echo "$ac_script" 2>/dev/null | sed 99q >conftest.sed
+     { ac_script=; unset ac_script;}
+     if test -z "$SED"; then
+  ac_path_SED_found=false
+  # Loop through the user's path and test for each of PROGNAME-LIST
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in sed gsed; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      ac_path_SED="$as_dir/$ac_prog$ac_exec_ext"
+      as_fn_executable_p "$ac_path_SED" || continue
+# Check for GNU ac_path_SED and select it if it is found.
+  # Check for GNU $ac_path_SED
+case `"$ac_path_SED" --version 2>&1` in
+*GNU*)
+  ac_cv_path_SED="$ac_path_SED" ac_path_SED_found=:;;
+*)
+  ac_count=0
+  $as_echo_n 0123456789 >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    $as_echo '' >> "conftest.nl"
+    "$ac_path_SED" -f conftest.sed < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    as_fn_arith $ac_count + 1 && ac_count=$as_val
+    if test $ac_count -gt ${ac_path_SED_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_SED="$ac_path_SED"
+      ac_path_SED_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+      $ac_path_SED_found && break 3
+    done
+  done
+  done
+IFS=$as_save_IFS
+  if test -z "$ac_cv_path_SED"; then
+    as_fn_error $? "no acceptable sed could be found in \$PATH" "$LINENO" 5
+  fi
+else
+  ac_cv_path_SED=$SED
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_SED" >&5
+$as_echo "$ac_cv_path_SED" >&6; }
+ SED="$ac_cv_path_SED"
+  rm -f conftest.sed
+
 # Check whether --enable-liblua was given.
 if test "${enable_liblua+set}" = set; then :
   enableval=$enable_liblua;
@@ -4772,8 +4840,11 @@
 
 
 
+
+
+
        if test "x$LUA" = 'x'; then :
-  for ac_prog in lua lua5.2 lua52 lua5.1 lua51 lua50
+  for ac_prog in lua lua5.3 lua53 lua5.2 lua52 lua5.1 lua51 lua50
 do
   # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
@@ -4822,20 +4893,33 @@
 fi
     ax_display_LUA='lua'
 
-        { $as_echo "$as_me:${as_lineno-$LINENO}: checking if $LUA is a Lua interpreter" >&5
+    if test "x$LUA" != 'x:'; then :
+           { $as_echo "$as_me:${as_lineno-$LINENO}: checking if $LUA is a Lua interpreter" >&5
 $as_echo_n "checking if $LUA is a Lua interpreter... " >&6; }
 
-    if $LUA -e "print('Hello ' .. _VERSION .. '!')" &>/dev/null; then :
+      _ax_lua_factorial=`$LUA 2>/dev/null -e '
+    -- a simple factorial
+    function fact (n)
+      if n == 0 then
+        return 1
+      else
+        return n * fact(n-1)
+      end
+    end
+    print("fact(5) is " .. fact(5))'`
+  if test "$_ax_lua_factorial" = 'fact(5) is 120'; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 else
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
-        as_fn_error $? "not a Lua interpreter" "$LINENO" 5
+            as_fn_error $? "not a Lua interpreter" "$LINENO" 5
 
 fi
 
 
+fi
+
 
   if test "x$LUA" = 'x:'; then :
 
@@ -4848,9 +4932,10 @@
 if ${ax_cv_lua_version+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-   ax_cv_lua_version=`$LUA -e "print(_VERSION)" | \
-          sed "s|^Lua \(.*\)|\1|" | \
-          grep -E -o "^[0-9]+\.[0-9]+"`
+                   ax_cv_lua_version=`$LUA -e '
+          -- return a version number in X.Y format
+          local _, _, ver = string.find(_VERSION, "^Lua (%d+%.%d+)")
+          print(ver)'`
 
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_lua_version" >&5
@@ -4860,7 +4945,7 @@
 fi
     LUA_VERSION=$ax_cv_lua_version
 
-    LUA_SHORT_VERSION=`echo "$LUA_VERSION" | sed 's|\.||'`
+    LUA_SHORT_VERSION=`echo "$LUA_VERSION" | $SED 's|\.||'`
 
 
                 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ax_display_LUA platform" >&5
@@ -4868,7 +4953,7 @@
 if ${ax_cv_lua_platform+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-  ax_cv_lua_platform=`$LUA -e "print('unknown')"`
+  ax_cv_lua_platform=`$LUA -e 'print("unknown")'`
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_lua_platform" >&5
 $as_echo "$ax_cv_lua_platform" >&6; }
@@ -4895,26 +4980,37 @@
 
 
 
-  ax_lua_prefixed_path=''
-  _ax_package_paths=`$LUA -e 'print(package.path)' 2>/dev/null | sed 's|;|\n|g'`
-    for _ax_package_path in $_ax_package_paths; do
-        _ax_path_parts=`echo "$_ax_package_path" | sed 's|/|\n|g'`
-    _ax_reassembled=''
-    for _ax_path_part in $_ax_path_parts; do
-      echo "$_ax_path_part" | grep '\?' >/dev/null && break
-      _ax_reassembled="$_ax_reassembled/$_ax_path_part"
-    done
-        _ax_package_path=$_ax_reassembled
-    if echo "$_ax_package_path" | grep "^$ax_lua_prefix" >/dev/null; then
-            ax_lua_prefixed_path=$_ax_package_path
-      break
-    fi
-  done
+  ax_lua_prefixed_path=`$LUA -e '
+    -- get the path based on search type
+    local searchtype = "script"
+    local paths = ""
+    if searchtype == "script" then
+      paths = (package and package.path) or LUA_PATH
+    elseif searchtype == "module" then
+      paths = (package and package.cpath) or LUA_CPATH
+    end
+    -- search for the prefix
+    local prefix = "'$ax_lua_prefix'"
+    local minpath = ""
+    local mindepth = 1e9
+    string.gsub(paths, "([^;]+)",
+      function (path)
+        path = string.gsub(path, "%?.*$", "")
+        path = string.gsub(path, "/[^/]*$", "")
+        if string.find(path, prefix) then
+          local depth = string.len(string.gsub(path, "[^/]", ""))
+          if depth < mindepth then
+            minpath = path
+            mindepth = depth
+          end
+        end
+      end)
+    print(minpath)'`
 
         if test "x$ax_lua_prefixed_path" != 'x'; then :
-             _ax_strip_prefix=`echo "$ax_lua_prefix" | sed 's|.|.|g'`
+             _ax_strip_prefix=`echo "$ax_lua_prefix" | $SED 's|.|.|g'`
           ax_cv_lua_luadir=`echo "$ax_lua_prefixed_path" | \
-            sed "s,^$_ax_strip_prefix,$LUA_PREFIX,"`
+            $SED "s|^$_ax_strip_prefix|$LUA_PREFIX|"`
 
 fi
 
@@ -4941,26 +5037,37 @@
 
 
 
-  ax_lua_prefixed_path=''
-  _ax_package_paths=`$LUA -e 'print(package.cpathd)' 2>/dev/null | sed 's|;|\n|g'`
-    for _ax_package_path in $_ax_package_paths; do
-        _ax_path_parts=`echo "$_ax_package_path" | sed 's|/|\n|g'`
-    _ax_reassembled=''
-    for _ax_path_part in $_ax_path_parts; do
-      echo "$_ax_path_part" | grep '\?' >/dev/null && break
-      _ax_reassembled="$_ax_reassembled/$_ax_path_part"
-    done
-        _ax_package_path=$_ax_reassembled
-    if echo "$_ax_package_path" | grep "^$ax_lua_exec_prefix" >/dev/null; then
-            ax_lua_prefixed_path=$_ax_package_path
-      break
-    fi
-  done
+  ax_lua_prefixed_path=`$LUA -e '
+    -- get the path based on search type
+    local searchtype = "module"
+    local paths = ""
+    if searchtype == "script" then
+      paths = (package and package.path) or LUA_PATH
+    elseif searchtype == "module" then
+      paths = (package and package.cpath) or LUA_CPATH
+    end
+    -- search for the prefix
+    local prefix = "'$ax_lua_exec_prefix'"
+    local minpath = ""
+    local mindepth = 1e9
+    string.gsub(paths, "([^;]+)",
+      function (path)
+        path = string.gsub(path, "%?.*$", "")
+        path = string.gsub(path, "/[^/]*$", "")
+        if string.find(path, prefix) then
+          local depth = string.len(string.gsub(path, "[^/]", ""))
+          if depth < mindepth then
+            minpath = path
+            mindepth = depth
+          end
+        end
+      end)
+    print(minpath)'`
 
         if test "x$ax_lua_prefixed_path" != 'x'; then :
-             _ax_strip_prefix=`echo "$ax_lua_exec_prefix" | sed 's|.|.|g'`
+             _ax_strip_prefix=`echo "$ax_lua_exec_prefix" | $SED 's|.|.|g'`
           ax_cv_lua_luaexecdir=`echo "$ax_lua_prefixed_path" | \
-            sed "s,^$_ax_strip_prefix,$LUA_EXEC_PREFIX,"`
+            $SED "s|^$_ax_strip_prefix|$LUA_EXEC_PREFIX|"`
 
 fi
 
@@ -4988,7 +5095,7 @@
 
 
 
-    LUA_SHORT_VERSION=`echo "$LUA_VERSION" | sed 's|\.||'`
+    LUA_SHORT_VERSION=`echo "$LUA_VERSION" | $SED 's|\.||'`
 
 
     _ax_lua_saved_cppflags=$CPPFLAGS
@@ -5011,6 +5118,7 @@
     if test "x$LUA_INCLUDE" = 'x' &&
          test "x$ac_cv_header_lua_h" != 'xyes'; then :
          for _ax_include_path in  /usr/include/lua$LUA_VERSION \
+      /usr/include/lua-$LUA_VERSION \
       /usr/include/lua/$LUA_VERSION \
       /usr/include/lua$LUA_SHORT_VERSION \
       /usr/local/include/lua$LUA_VERSION \
@@ -5058,14 +5166,15 @@
 
   if test "x$ac_cv_header_lua_h" = 'xyes'; then :
 
-      { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Lua header version" >&5
+      if test "x$cross_compiling" != 'xyes'; then :
+   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Lua header version" >&5
 $as_echo_n "checking for Lua header version... " >&6; }
 if ${ax_cv_lua_header_version+:} false; then :
   $as_echo_n "(cached) " >&6
 else
    _ax_lua_saved_cppflags=$CPPFLAGS
-          CPPFLAGS="$CPPFLAGS $LUA_INCLUDE"
-          if test "$cross_compiling" = yes; then :
+              CPPFLAGS="$CPPFLAGS $LUA_INCLUDE"
+              if test "$cross_compiling" = yes; then :
   { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
 $as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
 as_fn_error $? "cannot run test program while cross compiling
@@ -5087,8 +5196,7 @@
 _ACEOF
 if ac_fn_c_try_run "$LINENO"; then :
    ax_cv_lua_header_version=`./conftest$EXEEXT p | \
-                sed "s|^Lua \(.*\)|\1|" | \
-                grep -E -o "^[0-9]+\.[0-9]+"`
+                    $SED -n "s|^Lua \([0-9]\{1,\}\.[0-9]\{1,\}\).\{0,\}|\1|p"`
 
 else
   ax_cv_lua_header_version='unknown'
@@ -5097,23 +5205,30 @@
   conftest.$ac_objext conftest.beam conftest.$ac_ext
 fi
 
-          CPPFLAGS=$_ax_lua_saved_cppflags
+              CPPFLAGS=$_ax_lua_saved_cppflags
 
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_lua_header_version" >&5
 $as_echo "$ax_cv_lua_header_version" >&6; }
 
-            { $as_echo "$as_me:${as_lineno-$LINENO}: checking if Lua header version matches $LUA_VERSION" >&5
+                    { $as_echo "$as_me:${as_lineno-$LINENO}: checking if Lua header version matches $LUA_VERSION" >&5
 $as_echo_n "checking if Lua header version matches $LUA_VERSION... " >&6; }
-      if test "x$ax_cv_lua_header_version" = "x$LUA_VERSION"; then :
+          if test "x$ax_cv_lua_header_version" = "x$LUA_VERSION"; then :
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
-          ax_header_version_match='yes'
+              ax_header_version_match='yes'
 
 else
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
-          ax_header_version_match='no'
+              ax_header_version_match='no'
+
+fi
+
+else
+   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: cross compiling so assuming header version number matches" >&5
+$as_echo "$as_me: WARNING: cross compiling so assuming header version number matches" >&2;}
+          ax_header_version_match='yes'
 
 fi
 
@@ -5369,10 +5484,11 @@
 }
 _ACEOF
 for ac_lib in ''  lua$LUA_VERSION \
-                     lua$LUA_SHORT_VERSION \
-                     lua-$LUA_VERSION \
-                     lua-$LUA_SHORT_VERSION \
-                     lua; do
+        lua$LUA_SHORT_VERSION \
+        lua-$LUA_VERSION \
+        lua-$LUA_SHORT_VERSION \
+        lua \
+      ; do
   if test -z "$ac_lib"; then
     ac_res="none required"
   else
@@ -5441,8 +5557,11 @@
 
 
 
+
+
+
        if test "x$LUA" = 'x'; then :
-  for ac_prog in lua lua5.2 lua52 lua5.1 lua51 lua50
+  for ac_prog in lua lua5.3 lua53 lua5.2 lua52 lua5.1 lua51 lua50
 do
   # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
@@ -5491,20 +5610,33 @@
 fi
     ax_display_LUA='lua'
 
-        { $as_echo "$as_me:${as_lineno-$LINENO}: checking if $LUA is a Lua interpreter" >&5
+    if test "x$LUA" != 'x:'; then :
+           { $as_echo "$as_me:${as_lineno-$LINENO}: checking if $LUA is a Lua interpreter" >&5
 $as_echo_n "checking if $LUA is a Lua interpreter... " >&6; }
 
-    if $LUA -e "print('Hello ' .. _VERSION .. '!')" &>/dev/null; then :
+      _ax_lua_factorial=`$LUA 2>/dev/null -e '
+    -- a simple factorial
+    function fact (n)
+      if n == 0 then
+        return 1
+      else
+        return n * fact(n-1)
+      end
+    end
+    print("fact(5) is " .. fact(5))'`
+  if test "$_ax_lua_factorial" = 'fact(5) is 120'; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 else
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
-        as_fn_error $? "not a Lua interpreter" "$LINENO" 5
+            as_fn_error $? "not a Lua interpreter" "$LINENO" 5
 
 fi
 
 
+fi
+
 
   if test "x$LUA" = 'x:'; then :
 
@@ -5517,9 +5649,10 @@
 if ${ax_cv_lua_version+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-   ax_cv_lua_version=`$LUA -e "print(_VERSION)" | \
-          sed "s|^Lua \(.*\)|\1|" | \
-          grep -E -o "^[0-9]+\.[0-9]+"`
+                   ax_cv_lua_version=`$LUA -e '
+          -- return a version number in X.Y format
+          local _, _, ver = string.find(_VERSION, "^Lua (%d+%.%d+)")
+          print(ver)'`
 
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_lua_version" >&5
@@ -5529,7 +5662,7 @@
 fi
     LUA_VERSION=$ax_cv_lua_version
 
-    LUA_SHORT_VERSION=`echo "$LUA_VERSION" | sed 's|\.||'`
+    LUA_SHORT_VERSION=`echo "$LUA_VERSION" | $SED 's|\.||'`
 
 
                 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ax_display_LUA platform" >&5
@@ -5537,7 +5670,7 @@
 if ${ax_cv_lua_platform+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-  ax_cv_lua_platform=`$LUA -e "print('unknown')"`
+  ax_cv_lua_platform=`$LUA -e 'print("unknown")'`
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_lua_platform" >&5
 $as_echo "$ax_cv_lua_platform" >&6; }
@@ -5564,26 +5697,37 @@
 
 
 
-  ax_lua_prefixed_path=''
-  _ax_package_paths=`$LUA -e 'print(package.path)' 2>/dev/null | sed 's|;|\n|g'`
-    for _ax_package_path in $_ax_package_paths; do
-        _ax_path_parts=`echo "$_ax_package_path" | sed 's|/|\n|g'`
-    _ax_reassembled=''
-    for _ax_path_part in $_ax_path_parts; do
-      echo "$_ax_path_part" | grep '\?' >/dev/null && break
-      _ax_reassembled="$_ax_reassembled/$_ax_path_part"
-    done
-        _ax_package_path=$_ax_reassembled
-    if echo "$_ax_package_path" | grep "^$ax_lua_prefix" >/dev/null; then
-            ax_lua_prefixed_path=$_ax_package_path
-      break
-    fi
-  done
+  ax_lua_prefixed_path=`$LUA -e '
+    -- get the path based on search type
+    local searchtype = "script"
+    local paths = ""
+    if searchtype == "script" then
+      paths = (package and package.path) or LUA_PATH
+    elseif searchtype == "module" then
+      paths = (package and package.cpath) or LUA_CPATH
+    end
+    -- search for the prefix
+    local prefix = "'$ax_lua_prefix'"
+    local minpath = ""
+    local mindepth = 1e9
+    string.gsub(paths, "([^;]+)",
+      function (path)
+        path = string.gsub(path, "%?.*$", "")
+        path = string.gsub(path, "/[^/]*$", "")
+        if string.find(path, prefix) then
+          local depth = string.len(string.gsub(path, "[^/]", ""))
+          if depth < mindepth then
+            minpath = path
+            mindepth = depth
+          end
+        end
+      end)
+    print(minpath)'`
 
         if test "x$ax_lua_prefixed_path" != 'x'; then :
-             _ax_strip_prefix=`echo "$ax_lua_prefix" | sed 's|.|.|g'`
+             _ax_strip_prefix=`echo "$ax_lua_prefix" | $SED 's|.|.|g'`
           ax_cv_lua_luadir=`echo "$ax_lua_prefixed_path" | \
-            sed "s,^$_ax_strip_prefix,$LUA_PREFIX,"`
+            $SED "s|^$_ax_strip_prefix|$LUA_PREFIX|"`
 
 fi
 
@@ -5610,26 +5754,37 @@
 
 
 
-  ax_lua_prefixed_path=''
-  _ax_package_paths=`$LUA -e 'print(package.cpathd)' 2>/dev/null | sed 's|;|\n|g'`
-    for _ax_package_path in $_ax_package_paths; do
-        _ax_path_parts=`echo "$_ax_package_path" | sed 's|/|\n|g'`
-    _ax_reassembled=''
-    for _ax_path_part in $_ax_path_parts; do
-      echo "$_ax_path_part" | grep '\?' >/dev/null && break
-      _ax_reassembled="$_ax_reassembled/$_ax_path_part"
-    done
-        _ax_package_path=$_ax_reassembled
-    if echo "$_ax_package_path" | grep "^$ax_lua_exec_prefix" >/dev/null; then
-            ax_lua_prefixed_path=$_ax_package_path
-      break
-    fi
-  done
+  ax_lua_prefixed_path=`$LUA -e '
+    -- get the path based on search type
+    local searchtype = "module"
+    local paths = ""
+    if searchtype == "script" then
+      paths = (package and package.path) or LUA_PATH
+    elseif searchtype == "module" then
+      paths = (package and package.cpath) or LUA_CPATH
+    end
+    -- search for the prefix
+    local prefix = "'$ax_lua_exec_prefix'"
+    local minpath = ""
+    local mindepth = 1e9
+    string.gsub(paths, "([^;]+)",
+      function (path)
+        path = string.gsub(path, "%?.*$", "")
+        path = string.gsub(path, "/[^/]*$", "")
+        if string.find(path, prefix) then
+          local depth = string.len(string.gsub(path, "[^/]", ""))
+          if depth < mindepth then
+            minpath = path
+            mindepth = depth
+          end
+        end
+      end)
+    print(minpath)'`
 
         if test "x$ax_lua_prefixed_path" != 'x'; then :
-             _ax_strip_prefix=`echo "$ax_lua_exec_prefix" | sed 's|.|.|g'`
+             _ax_strip_prefix=`echo "$ax_lua_exec_prefix" | $SED 's|.|.|g'`
           ax_cv_lua_luaexecdir=`echo "$ax_lua_prefixed_path" | \
-            sed "s,^$_ax_strip_prefix,$LUA_EXEC_PREFIX,"`
+            $SED "s|^$_ax_strip_prefix|$LUA_EXEC_PREFIX|"`
 
 fi
 
@@ -5657,7 +5812,7 @@
 
 
 
-    LUA_SHORT_VERSION=`echo "$LUA_VERSION" | sed 's|\.||'`
+    LUA_SHORT_VERSION=`echo "$LUA_VERSION" | $SED 's|\.||'`
 
 
     _ax_lua_saved_cppflags=$CPPFLAGS
@@ -5680,6 +5835,7 @@
     if test "x$LUA_INCLUDE" = 'x' &&
          test "x$ac_cv_header_lua_h" != 'xyes'; then :
          for _ax_include_path in  /usr/include/lua$LUA_VERSION \
+      /usr/include/lua-$LUA_VERSION \
       /usr/include/lua/$LUA_VERSION \
       /usr/include/lua$LUA_SHORT_VERSION \
       /usr/local/include/lua$LUA_VERSION \
@@ -5727,14 +5883,15 @@
 
   if test "x$ac_cv_header_lua_h" = 'xyes'; then :
 
-      { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Lua header version" >&5
+      if test "x$cross_compiling" != 'xyes'; then :
+   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Lua header version" >&5
 $as_echo_n "checking for Lua header version... " >&6; }
 if ${ax_cv_lua_header_version+:} false; then :
   $as_echo_n "(cached) " >&6
 else
    _ax_lua_saved_cppflags=$CPPFLAGS
-          CPPFLAGS="$CPPFLAGS $LUA_INCLUDE"
-          if test "$cross_compiling" = yes; then :
+              CPPFLAGS="$CPPFLAGS $LUA_INCLUDE"
+              if test "$cross_compiling" = yes; then :
   { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
 $as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
 as_fn_error $? "cannot run test program while cross compiling
@@ -5756,8 +5913,7 @@
 _ACEOF
 if ac_fn_c_try_run "$LINENO"; then :
    ax_cv_lua_header_version=`./conftest$EXEEXT p | \
-                sed "s|^Lua \(.*\)|\1|" | \
-                grep -E -o "^[0-9]+\.[0-9]+"`
+                    $SED -n "s|^Lua \([0-9]\{1,\}\.[0-9]\{1,\}\).\{0,\}|\1|p"`
 
 else
   ax_cv_lua_header_version='unknown'
@@ -5766,23 +5922,30 @@
   conftest.$ac_objext conftest.beam conftest.$ac_ext
 fi
 
-          CPPFLAGS=$_ax_lua_saved_cppflags
+              CPPFLAGS=$_ax_lua_saved_cppflags
 
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_lua_header_version" >&5
 $as_echo "$ax_cv_lua_header_version" >&6; }
 
-            { $as_echo "$as_me:${as_lineno-$LINENO}: checking if Lua header version matches $LUA_VERSION" >&5
+                    { $as_echo "$as_me:${as_lineno-$LINENO}: checking if Lua header version matches $LUA_VERSION" >&5
 $as_echo_n "checking if Lua header version matches $LUA_VERSION... " >&6; }
-      if test "x$ax_cv_lua_header_version" = "x$LUA_VERSION"; then :
+          if test "x$ax_cv_lua_header_version" = "x$LUA_VERSION"; then :
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
-          ax_header_version_match='yes'
+              ax_header_version_match='yes'
 
 else
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
-          ax_header_version_match='no'
+              ax_header_version_match='no'
+
+fi
+
+else
+   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: cross compiling so assuming header version number matches" >&5
+$as_echo "$as_me: WARNING: cross compiling so assuming header version number matches" >&2;}
+          ax_header_version_match='yes'
 
 fi
 
@@ -6038,10 +6201,11 @@
 }
 _ACEOF
 for ac_lib in ''  lua$LUA_VERSION \
-                     lua$LUA_SHORT_VERSION \
-                     lua-$LUA_VERSION \
-                     lua-$LUA_SHORT_VERSION \
-                     lua; do
+        lua$LUA_SHORT_VERSION \
+        lua-$LUA_VERSION \
+        lua-$LUA_SHORT_VERSION \
+        lua \
+      ; do
   if test -z "$ac_lib"; then
     ac_res="none required"
   else
@@ -6108,7 +6272,7 @@
 # Check whether --enable-python was given.
 if test "${enable_python+set}" = set; then :
   enableval=$enable_python;
-    if test "x$enableval" = "xno" ; then
+    if test "x$enableval" = "xyes" ; then
       { $as_echo "$as_me:${as_lineno-$LINENO}: result: disabled" >&5
 $as_echo "disabled" >&6; }
     else
